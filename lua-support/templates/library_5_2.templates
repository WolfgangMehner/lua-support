== LIST: idioms_func_5_2 == hash ==
	'assert' : '{+value+}{+message_opt+}',
	'collectgarbage' : '{+option_opt+}{+arg_opt+}',
	'dofile' : '{+filename_opt+}',
	'error' : '{+message+}{+level_opt+}',
	'getmetatable' : '{+object+}',
	'ipairs' : '{+object+}',
	'load' : '{+ld+}{+source_opt+}{+mode_opt+}{+env_opt+}',
	'loadfile' : '{+filename+}{+mode_opt+}{+env_opt+}',
	'next' : '{+table+}{+index_opt+}',
	'pairs' : '{+object+}',
	'pcall' : '{+func+}{+args_opt+}',
	'print' : '{+args_opt+}',
	'rawequal' : '{+v1+}, {+v2+}',
	'rawget' : '{+table+}, {+index+}',
	'rawlen' : '{+value+}',
	'rawset' : '{+table+}, {+index+}, {+value+}',
	'require' : '{+modname+}',
	'select' : '{+index+}, {+args+}',
	'setmetatable' : '{+table+}, {+metatable+}',
	'tonumber' : '{+exp+}{+base_opt+}',
	'tostring' : '{+value+}',
	'type' : '{+value+}',
	'xpcall' : '{+func+}, {+err_handler+}{+args_opt+}',
	'bit32.arshift' : '{+x+}, {+disp+}',
	'bit32.band' : '{+operands+}',
	'bit32.bnot' : '{+x+}',
	'bit32.bor' : '{+operands+}',
	'bit32.btest' : '{+operands+}',
	'bit32.bxor' : '{+operands+}',
	'bit32.extract' : '{+n+}, {+field+}{+width_opt+}',
	'bit32.lrotate' : '{+x+}, {+disp+}',
	'bit32.lshift' : '{+x+}, {+disp+}',
	'bit32.replace' : '{+n+}, {+v+}, {+field+}{+width_opt+}',
	'bit32.rrotate' : '{+x+}, {+disp+}',
	'bit32.rshift' : '{+x+}, {+disp+}',
	'coroutine.create' : '{+func+}',
	'coroutine.resume' : '{+co+}{+args_opt+}',
	'coroutine.running' : '',
	'coroutine.status' : '{+co+}',
	'coroutine.wrap' : '{+func+}',
	'coroutine.yield' : '{+args_opt+}',
	'debug.debug' : '',
	'debug.gethook' : '{+thread_opt+}',
	'debug.getinfo' : '{+thread_opt+}{+f+}{+what_opt+}',
	'debug.getlocal' : '{+thread_opt+}{+f+}, {+local+}',
	'debug.getmetatable' : '{+value+}',
	'debug.getregistry' : '',
	'debug.getupvalue' : '{+f+}, {+up+}',
	'debug.getuservalue' : '{+u+}',
	'debug.sethook' : '{+thread_opt+}{+hook+}, {+mask+}{+count_opt+}',
	'debug.setlocal' : '{+thread_opt+}{+level+}, {+local+}, {+value+}',
	'debug.setmetatable' : '{+value+}, {+table+}',
	'debug.setupvalue' : '{+f+}, {+up+}, {+value+}',
	'debug.setuservalue' : '{+udata+}, {+value+}',
	'debug.traceback' : '{+thread_opt+}{+message_opt+}{+level_opt+}',
	'debug.upvalueid' : '{+f+}, {+n+}',
	'debug.upvaluejoin' : '{+f1+}, {+n1+}, {+f2+}, {+n2+}',
	'file:close' : '',
	'file:flush' : '',
	'file:lines' : '{+formats_opt+}',
	'file:read' : '{+formats_opt+}',
	'file:seek' : '{+whence_opt+}{+offset_opt+}',
	'file:setvbuf' : '{+mode+}{+size_opt+}',
	'file:write' : '{+args+}',
	'io.close' : '{+file_opt+}',
	'io.flush' : '',
	'io.input' : '{+file_opt+}',
	'io.lines' : '{+filename_opt+}{+formats_opt+}',
	'io.open' : '{+filename+}{+mode_opt+}',
	'io.output' : '{+file_opt+}',
	'io.popen' : '{+prog+}{+mode_opt+}',
	'io.read' : '{+formats_opt+}',
	'io.tmpfile' : '',
	'io.type' : '{+obj+}',
	'io.write' : '{+args+}',
	'math.abs' : '{+x+}',
	'math.acos' : '{+x+}',
	'math.asin' : '{+x+}',
	'math.atan' : '{+x+}',
	'math.atan2' : '{+y+}, {+x+}',
	'math.ceil' : '{+x+}',
	'math.cos' : '{+x+}',
	'math.cosh' : '{+x+}',
	'math.deg' : '{+x+}',
	'math.exp' : '{+x+}',
	'math.floor' : '{+x+}',
	'math.fmod' : '{+x+}, {+y+}',
	'math.frexp' : '{+x+}',
	'math.ldexp' : '{+m+}, {+e+}',
	'math.log' : '{+x+}{+base_opt+}',
	'math.max' : '{+args+}',
	'math.min' : '{+args+}',
	'math.modf' : '{+x+}',
	'math.pow' : '{+x+}, {+y+}',
	'math.rad' : '{+x+}',
	'math.random' : '{+m_opt+}{+n_opt+}',
	'math.randomseed' : '{+x+}',
	'math.sin' : '{+x+}',
	'math.sinh' : '{+x+}',
	'math.sqrt' : '{+x+}',
	'math.tan' : '{+x+}',
	'math.tanh' : '{+x+}',
	'os.clock' : '',
	'os.date' : '{+format_opt+}{+time_opt+}',
	'os.difftime' : '{+t2+}, {+t1+}',
	'os.execute' : '{+command_opt+}',
	'os.exit' : '{+code_opt+}{+close_opt+}',
	'os.getenv' : '{+varname+}',
	'os.remove' : '{+filename+}',
	'os.rename' : '{+oldname+}, {+newname+}',
	'os.setlocale' : '{+locale+}{+category_opt+}',
	'os.time' : '{+table_opt+}',
	'os.tmpname' : '',
	'package.loadlib' : '{+libname+}, {+funcname+}',
	'package.searchpath' : '{+name+}, {+path+}{+sep_opt+}{+rep_opt+}',
	'string.byte' : '{+str+}{+i_opt+}{+j_opt+}',
	'string.char' : '{+bytecodes+}',
	'string.dump' : '{+function+}',
	'string.find' : '{+str+}, {+pattern+}{+init_opt+}{+plain_opt+}',
	'string.format' : '{+formatstring+}, {+args+}',
	'string.gmatch' : '{+str+}, {+pattern+}',
	'string.gsub' : '{+str+}, {+pattern+}, {+repl+}{+n_opt+}',
	'string.len' : '{+str+}',
	'string.lower' : '{+str+}',
	'string.match' : '{+str+}, {+pattern+}{+init_opt+}',
	'string.rep' : '{+str+}, {+n+}{+sep_opt+}',
	'string.reverse' : '{+str+}',
	'string.sub' : '{+str+}, {+i+}{+j_opt+}',
	'string.upper' : '{+str+}',
	'table.concat' : '{+list+}{+sep_opt+}{+i_opt+}{+j_opt+}',
	'table.insert' : '{+list+}{+pos_opt+}, {+value+}',
	'table.pack' : '{+args+}',
	'table.remove' : '{+list+}{+pos_opt+}',
	'table.sort' : '{+list+}{+comp_opt+}',
	'table.unpack' : '{+list+}{+i_opt+}{+j_opt+}',
== ENDLIST ==

== LIST: idioms_var_5_2 == hash ==
	'global environment'    : '_G',
	'interpreter version'   : '_VERSION',
	'largest numeric value' : 'math.huge',
	'pi'                    : 'math.pi',
	'stderr'                : 'io.stderr',
	'stdin'                 : 'io.stdin',
	'stdout'                : 'io.stdout',
== ENDLIST ==

== LIST: idioms_metamethod_5_2 == hash ==
	'add'      : 'op1, op2',
	'sub'      : 'op1, op2',
	'mul'      : 'op1, op2',
	'div'      : 'op1, op2',
	'mod'      : 'op1, op2',
	'pow'      : 'op1, op2',
	'unm'      : 'op',
	'concat'   : 'op1, op2',
	'len'      : 'op',
	'eq'       : 'op1, op2',
	'lt'       : 'op1, op2',
	'le'       : 'op1, op2',
	'index'    : 'object, key',
	'newindex' : 'object, key, value',
	'call'     : 'func, ...',
	'tostring' : 'value',
	'gc'       : 'udata',
	'ipairs'   : 'value',
	'pairs'    : 'value',
== ENDLIST ==
