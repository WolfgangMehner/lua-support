== LIST: idioms_func_5_2 == hash ==
	'assert' : '<+value+>, [+message+]',
	'collectgarbage' : '[+option+], [+arg+]',
	'dofile' : '[+filename+]',
	'error' : '<+message+>, [+level+]',
	'getmetatable' : '<+object+>',
	'ipairs' : '<+object+>',
	'load' : '<+ld+>, [+source+], [+mode+], [+env+]',
	'loadfile' : '<+filename+>, [+mode+], [+env+]',
	'next' : '<+table+>, [+index+]',
	'pairs' : '<+object+>',
	'pcall' : '<+func+>, [+args+]',
	'print' : '[+args+]',
	'rawequal' : '<+v1+>, <+v2+>',
	'rawget' : '<+table+>, <+index+>',
	'rawlen' : '<+value+>',
	'rawset' : '<+table+>, <+index+>, <+value+>',
	'require' : '<+modname+>',
	'select' : '<+index+>, <+args+>',
	'setmetatable' : '<+table+>, <+metatable+>',
	'tonumber' : '<+exp+>, [+base+]',
	'tostring' : '<+value+>',
	'type' : '<+value+>',
	'xpcall' : '<+func+>, <+err_handler+>, [+args+]',
	'bit32.arshift' : '<+x+>, <+disp+>',
	'bit32.band' : '<+operands+>',
	'bit32.bnot' : '<+x+>',
	'bit32.bor' : '<+operands+>',
	'bit32.btest' : '<+operands+>',
	'bit32.bxor' : '<+operands+>',
	'bit32.extract' : '<+n+>, <+field+>, [+width+]',
	'bit32.lrotate' : '<+x+>, <+disp+>',
	'bit32.lshift' : '<+x+>, <+disp+>',
	'bit32.replace' : '<+n+>, <+v+>, <+field+>, [+width+]',
	'bit32.rrotate' : '<+x+>, <+disp+>',
	'bit32.rshift' : '<+x+>, <+disp+>',
	'coroutine.create' : '<+func+>',
	'coroutine.resume' : '<+co+>, [+args+]',
	'coroutine.running' : '',
	'coroutine.status' : '<+co+>',
	'coroutine.wrap' : '<+func+>',
	'coroutine.yield' : '[+args+]',
	'debug.debug' : '',
	'debug.gethook' : '[+thread+]',
	'debug.getinfo' : '[+thread+], <+f+>, [+what+]',
	'debug.getlocal' : '[+thread+], <+f+>, <+local+>',
	'debug.getmetatable' : '<+value+>',
	'debug.getregistry' : '',
	'debug.getupvalue' : '<+f+>, <+up+>',
	'debug.getuservalue' : '<+u+>',
	'debug.sethook' : '[+thread+], <+hook+>, <+mask+>, [+count+]',
	'debug.setlocal' : '[+thread+], <+level+>, <+local+>, <+value+>',
	'debug.setmetatable' : '<+value+>, <+table+>',
	'debug.setupvalue' : '<+f+>, <+up+>, <+value+>',
	'debug.setuservalue' : '<+udata+>, <+value+>',
	'debug.traceback' : '[+thread+], [+message+], [+level+]',
	'debug.upvalueid' : '<+f+>, <+n+>',
	'debug.upvaluejoin' : '<+f1+>, <+n1+>, <+f2+>, <+n2+>',
	'file:close' : '',
	'file:flush' : '',
	'file:lines' : '[+formats+]',
	'file:read' : '[+formats+]',
	'file:seek' : '[+whence+], [+offset+]',
	'file:setvbuf' : '<+mode+>, [+size+]',
	'file:write' : '<+args+>',
	'io.close' : '[+file+]',
	'io.flush' : '',
	'io.input' : '[+file+]',
	'io.lines' : '[+filename+], [+formats+]',
	'io.open' : '<+filename+>, [+mode+]',
	'io.output' : '[+file+]',
	'io.popen' : '<+prog+>, [+mode+]',
	'io.read' : '[+formats+]',
	'io.tmpfile' : '',
	'io.type' : '<+obj+>',
	'io.write' : '<+args+>',
	'math.abs' : '<+x+>',
	'math.acos' : '<+x+>',
	'math.asin' : '<+x+>',
	'math.atan' : '<+x+>',
	'math.atan2' : '<+y+>, <+x+>',
	'math.ceil' : '<+x+>',
	'math.cos' : '<+x+>',
	'math.cosh' : '<+x+>',
	'math.deg' : '<+x+>',
	'math.exp' : '<+x+>',
	'math.floor' : '<+x+>',
	'math.fmod' : '<+x+>, <+y+>',
	'math.frexp' : '<+x+>',
	'math.ldexp' : '<+m+>, <+e+>',
	'math.log' : '<+x+>, [+base+]',
	'math.max' : '<+args+>',
	'math.min' : '<+args+>',
	'math.modf' : '<+x+>',
	'math.pow' : '<+x+>, <+y+>',
	'math.rad' : '<+x+>',
	'math.random' : '[+m+], [+n+]',
	'math.randomseed' : '<+x+>',
	'math.sin' : '<+x+>',
	'math.sinh' : '<+x+>',
	'math.sqrt' : '<+x+>',
	'math.tan' : '<+x+>',
	'math.tanh' : '<+x+>',
	'os.clock' : '',
	'os.date' : '[+format+], [+time+]',
	'os.difftime' : '<+t2+>, <+t1+>',
	'os.execute' : '[+command+]',
	'os.exit' : '[+code+], [+close+]',
	'os.getenv' : '<+varname+>',
	'os.remove' : '<+filename+>',
	'os.rename' : '<+oldname+>, <+newname+>',
	'os.setlocale' : '<+locale+>, [+category+]',
	'os.time' : '[+table+]',
	'os.tmpname' : '',
	'package.loadlib' : '<+libname+>, <+funcname+>',
	'package.searchpath' : '<+name+>, <+path+>, [+sep+], [+rep+]',
	'string.byte' : '<+str+>, [+i+], [+j+]',
	'string.char' : '<+bytecodes+>',
	'string.dump' : '<+function+>',
	'string.find' : '<+str+>, <+pattern+>, [+init+], [+plain+]',
	'string.format' : '<+formatstring+>, <+args+>',
	'string.gmatch' : '<+str+>, <+pattern+>',
	'string.gsub' : '<+str+>, <+pattern+>, <+repl+>, [+n+]',
	'string.len' : '<+str+>',
	'string.lower' : '<+str+>',
	'string.match' : '<+str+>, <+pattern+>, [+init+]',
	'string.rep' : '<+str+>, <+n+>, [+sep+]',
	'string.reverse' : '<+str+>',
	'string.sub' : '<+str+>, <+i+>, [+j+]',
	'string.upper' : '<+str+>',
	'table.concat' : '<+list+>, [+sep+], [+i+], [+j+]',
	'table.insert' : '<+list+>, [+pos+], <+value+>',
	'table.pack' : '<+args+>',
	'table.remove' : '<+list+>, [+pos+]',
	'table.sort' : '<+list+>, [+comp+]',
	'table.unpack' : '<+list+>, [+i+], [+j+]',
== ENDLIST ==

== LIST: idioms_var_5_2 == hash ==
	'global environment'    : '_G',
	'interpreter version'   : '_VERSION',
	'largest numeric value' : 'math.huge',
	'pi'                    : 'math.pi',
	'stderr'                : 'io.stderr',
	'stdin'                 : 'io.stdin',
	'stdout'                : 'io.stdout',
== ENDLIST ==

== LIST: idioms_metamethod_5_2 == hash ==
	'add'      : 'op1, op2',
	'sub'      : 'op1, op2',
	'mul'      : 'op1, op2',
	'div'      : 'op1, op2',
	'mod'      : 'op1, op2',
	'pow'      : 'op1, op2',
	'unm'      : 'op',
	'concat'   : 'op1, op2',
	'len'      : 'op',
	'eq'       : 'op1, op2',
	'lt'       : 'op1, op2',
	'le'       : 'op1, op2',
	'index'    : 'object, key',
	'newindex' : 'object, key, value',
	'call'     : 'func, ...',
	'tostring' : 'value',
	'gc'       : 'udata',
	'ipairs'   : 'value',
	'pairs'    : 'value',
== ENDLIST ==
