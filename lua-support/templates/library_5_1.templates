== LIST: idioms_func_5_1 == hash ==
	'assert' : '{+value+}{+message_opt+}',
	'collectgarbage' : '{+option+}{+arg_opt+}',
	'dofile' : '{+filename+}',
	'error' : '{+message+}{+level_opt+}',
	'getfenv' : '{+f_opt+}',
	'getmetatable' : '{+object+}',
	'ipairs' : '{+table+}',
	'load' : '{+func+}{+chunkname_opt+}',
	'loadfile' : '{+filename_opt+}',
	'loadstring' : '{+string+}{+chunkname_opt+}',
	'module' : '{+name+}{+options_opt+}',
	'next' : '{+table+}{+index_opt+}',
	'pairs' : '{+table+}',
	'pcall' : '{+func+}{+args_opt+}',
	'print' : '{+args_opt+}',
	'rawequal' : '{+v1+}, v2',
	'rawget' : '{+table+}, index',
	'rawset' : '{+table+}, index, value',
	'require' : '{+modname+}',
	'select' : '{+index+}, {+args+}',
	'setfenv' : '{+func+}, table',
	'setmetatable' : '{+table+}, metatable',
	'tonumber' : '{+exp+}{+base_opt+}',
	'tostring' : '{+value+}',
	'type' : '{+value+}',
	'unpack' : '{+table+}{+first_opt+}{+last_opt+}',
	'xpcall' : '{+func+}, {+err_handler+}',
	'coroutine.create' : 'f',
	'coroutine.resume' : 'co [, val1, &middot;&middot;&middot;]',
	'coroutine.running' : '',
	'coroutine.status' : 'co',
	'coroutine.wrap' : 'f',
	'coroutine.yield' : '&middot;&middot;&middot;',
	'debug.debug' : '',
	'debug.getfenv' : 'o',
	'debug.gethook' : '[thread]',
	'debug.getinfo' : '[thread,] function [, what]',
	'debug.getlocal' : '[thread,] level, local',
	'debug.getmetatable' : 'object',
	'debug.getregistry' : '',
	'debug.getupvalue' : 'func, up',
	'debug.setfenv' : 'object, table',
	'debug.sethook' : '[thread,] hook, mask [, count]',
	'debug.setlocal' : '[thread,] level, local, value',
	'debug.setmetatable' : 'object, table',
	'debug.setupvalue' : 'func, up, value',
	'debug.traceback' : '[thread,] [message] [, level]',
	'file:close' : '',
	'file:flush' : '',
	'file:lines' : '',
	'file:read' : '&middot;&middot;&middot;',
	'file:seek' : '[whence] [, offset]',
	'file:setvbuf' : 'mode [, size]',
	'file:write' : '&middot;&middot;&middot;',
	'io.close' : '[file]',
	'io.flush' : '',
	'io.input' : '[file]',
	'io.lines' : '[filename]',
	'io.open' : 'filename [, mode]',
	'io.output' : '[file]',
	'io.popen' : 'prog [, mode]',
	'io.read' : '&middot;&middot;&middot;',
	'io.tmpfile' : '',
	'io.type' : 'obj',
	'io.write' : '&middot;&middot;&middot;',
	'math.abs' : '{+x+}',
	'math.acos' : '{+x+}',
	'math.asin' : '{+x+}',
	'math.atan' : '{+x+}',
	'math.atan2' : '{+y+}, {+x+}',
	'math.ceil' : '{+x+}',
	'math.cos' : '{+x+}',
	'math.cosh' : '{+x+}',
	'math.deg' : '{+x+}',
	'math.exp' : '{+x+}',
	'math.floor' : '{+x+}',
	'math.fmod' : '{+x+}, {+y+}',
	'math.frexp' : '{+x+}',
	'math.ldexp' : '{+m+}, {+e+}',
	'math.log' : '{+x+}',
	'math.log10' : '{+x+}',
	'math.max' : '{+args+}',
	'math.min' : '{+args+}',
	'math.modf' : '{+x+}',
	'math.pow' : '{+x+}, {+y+}',
	'math.rad' : '{+x+}',
	'math.random' : '{+m_opt+}{+n_opt+}',
	'math.randomseed' : '{+x+}',
	'math.sin' : '{+x+}',
	'math.sinh' : '{+x+}',
	'math.sqrt' : '{+x+}',
	'math.tan' : '{+x+}',
	'math.tanh' : '{+x+}',
	'os.clock' : '',
	'os.date' : '[format [, time]]',
	'os.difftime' : 't2, t1',
	'os.execute' : '[command]',
	'os.exit' : '[code]',
	'os.getenv' : 'varname',
	'os.remove' : 'filename',
	'os.rename' : 'oldname, newname',
	'os.setlocale' : 'locale [, category]',
	'os.time' : '[table]',
	'os.tmpname' : '',
	'package.loadlib' : 'libname, funcname',
	'package.seeall' : 'module',
	'string.byte' : 's [, i [, j]]',
	'string.char' : '&middot;&middot;&middot;',
	'string.dump' : 'function',
	'string.find' : 's, pattern [, init [, plain]]',
	'string.format' : 'formatstring, &middot;&middot;&middot;',
	'string.gmatch' : 's, pattern',
	'string.gsub' : 's, pattern, repl [, n]',
	'string.len' : 's',
	'string.lower' : 's',
	'string.match' : 's, pattern [, init]',
	'string.rep' : 's, n',
	'string.reverse' : 's',
	'string.sub' : 's, i [, j]',
	'string.upper' : 's',
	'table.concat' : '{+list+}{+sep_opt+}{+i_opt+}{+j_opt+}',
	'table.insert' : '{+list+}{+pos_opt+}, {+value+}',
	'table.maxn' : '{+list+}',
	'table.remove' : '{+list+}{+pos_opt+}',
	'table.sort' : '{+list+}{+comp_opt+}',
== ENDLIST ==

== LIST: idioms_var_5_1 == hash ==
	'global environment'    : '_G',
	'interpreter version'   : '_VERSION',
	'largest numeric value' : 'math.huge',
	'pi'                    : 'math.pi',
	'stderr'                : 'io.stderr',
	'stdin'                 : 'io.stdin',
	'stdout'                : 'io.stdout',
== ENDLIST ==
